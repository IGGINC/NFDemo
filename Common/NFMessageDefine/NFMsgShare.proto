package NFMsg; 

import "NFDefine.proto";
import "NFMsgBase.proto";


//除 去基础对象身上的属性外，这里全部游戏中的逻辑协议

message ReqEnterGameServer
{
	required Ident 		id = 1;
	required bytes 		account = 2;
    required int32 		game_id = 3;
	required bytes 		name = 4;
}

message ReqHeartBeat
{
}

message ReqLeaveGameServer
{
}

message PlayerEntryInfo//对象出现基本信息
{
	required Ident	object_guid = 1;
	required float	x = 2;
	required float	y = 3;
	required float	z = 4;
	required int32	career_type = 5;
	required int32	player_state = 6;
	required bytes  config_id = 7;
	required int32  scene_id = 8;
	required bytes  class_id = 9;
}

message AckPlayerEntryList//对象出现列表
{
	repeated PlayerEntryInfo object_list = 1;
}

message AckPlayerLeaveList//对象离去列表
{
	repeated Ident 	object_list = 1;
}

////////////////////////////////////////////////////////////////////////////////////////////////////

message ReqAckSynData//对象离去列表
{
	enum SynType
	{
		EST_SCENE = 1;	//场景
		EST_GROUP = 2;	//层
		EST_GUILD = 3;	//公会
		EST_FRIEND = 4;	//好友
	}
	required Ident 		syser = 1;
	repeated Ident 		object_list = 2;
	required bytes  	data = 3;
	required SynType  	syn_type = 4;
	required EGameMsgID msg_id = 5;//有消息ID限制
}


////////////////////////////////////////////////////////////////////////////////////////////////////
message ReqAckPlayerMove
{
	required Ident 	mover = 1;
	required int32  moveType = 2;
	repeated Position target_pos = 3;
	repeated Position source_pos = 4;
}

message ChatContainer
{
	enum ContainerType
	{
		EGCT_ITEM = 1;	//道具
	}
	
	required int32 ConTainerType = 2;
	required bytes data_info = 3;
}

message ReqAckPlayerChat
{
	enum EGameChatType
	{
		EGCT_GUILD = 0;
		EGCT_PRIVATE = 1;
		EGCT_TEAM = 2;
		EGCT_WORLD = 3;
	}

	required Ident	chat_id = 1;
	required EGameChatType  chat_type = 2;
	required bytes chat_info = 3;
	required bytes chat_name = 4;
	optional Ident	target_id = 5;
	repeated ChatContainer Container_data = 6;
}

message EffectData
{
	enum EResultType
	{
		EET_SUCCESS = 0;
		EET_FAIL = 1;
		EET_REFUSE = 2;		
	}
	required Ident 			effect_ident = 1;
	required int32  		effect_value = 2;
	required EResultType  	effect_rlt = 3;
}

message ReqAckUseSkill
{
	required Ident 	user = 1;
	required bytes skill_id = 2;
	required Position now_pos = 3;
	required Position tar_pos = 4;
	required int32  use_index = 5;//因为客户端要先展示
	repeated EffectData 	effect_data = 6;
}

message ReqAckUseItem
{
	required Ident 	user = 1;
	required Ident item_guid	= 2;
	repeated EffectData 	effect_data = 3;
	required ItemStruct 	item = 4;
	required Ident 			targetid = 5;
}

message ReqAckSwapScene
{
	enum EGameSwapType
	{
		EGST_NARMAL = 0;//普通城镇传送
		EGST_CLONE = 1;//普通副本
		EGST_ARENA = 2;//竞技场
		EGST_MIRROR = 3;//镜像空间
	}

    required EGameSwapType		transfer_type = 1;
	required int32		scene_id = 2;
	required int32		line_id = 3;
	optional float 		x = 4;
	optional float 		y = 5;
	optional float 		z = 6;
}

message ItemStruct
{
    required string item_id            = 1; // 配置ID
    required int32 item_count          = 2; // 数量
}

message CurrencyStruct
{
    required int32 currency_type        = 1;// 金币，钻石，体力等等东西的类型
    required int32 currency_count       = 2;// 数量
}

message ReqAckEndBattle
{
	//下发的时候则为道具列表
	//获得的金币等列表
    required int32 money            = 1; // 副本获得的金币
    required int32 exp              = 2; // 副本获得的经验
    required int32 diamond          = 3; // 副本获得的经验
    repeated ItemStruct item_list   = 4; // 副本获得的道具列表
}


message ReqPickDropItem//拾取物品
{
	required Ident item_guid = 2;
}

message ReqAcceptTask//接受任务
{
	required bytes task_id = 1;
}

message ReqCompeleteTask//完成任务后申请领奖
{
	required bytes task_id = 1;
}

///////////////战斗/////////////////////////////////////////////////////////////////////////////////////

message ReqAckJoinActivity
{
	enum EGameActivityType
	{
		EGAT_PVP = 0;//普通PVP对战活动
	}
	
	enum EGameActivitySubType
	{
		EGAT_NORMAL = 0;//普通难度
	}
    required EGameActivityType		activity_type = 1;
    required EGameActivitySubType	sub_activity_type = 2;
}

message ReqAckSearchOppnent
{
    required EBattleType		search_type = 1;
    //optional EGameActivitySubType	sub_activity_type = 2;//回来要带对手数据
}

message ReqAckBattleOppnent
{
    required EBattleType		battle_type = 1;
}













///////////////工会/////////////////////////////////////////////////////////////////////////////////////
//EGMI_REQ_CREATE_GUILD                       = 300; // 申请创建公会 EGMI_ACK_CREATE_GUILD						= 301; // 创建公会结果
message ReqAckCreateGuild
{
    required Ident		guild_id = 1;
    required string		guild_name = 2;
}
//EGMI_REQ_SEARCH_GUILD                       = 308; // 申请搜索公会
message ReqSearchGuild
{
    required string		guild_name = 1;
}
//EGMI_ACK_SEARCH_GUILD                       = 309; // 返回搜索公会
message AckSearchGuild
{
	message SearchGuildObject
	{
		required Ident		guild_ID 	= 1;
		required string		guild_name 	= 2;
		required string		guild_icon 	= 3;
		required int32		guild_member_count 	= 4;
		required int32		guild_member_max_count 	= 5;
		required int32		guild_honor 	= 6;
		required int32		guild_rank 	= 7;
	}
	
	repeated SearchGuildObject guild_list = 1;
}
//EGMI_REQ_JOIN_GUILD                         = 302; // 申请加入公会 EGMI_ACK_JOIN_GUILD							= 303; // 加入公会结果
message ReqAckJoinGuild
{
    required Ident		guild_id = 1;
    required string		guild_name = 2;
}
//EGMI_ACK_LEAVE_GUILD						= 305; // 离开公会结果 
message ReqAckLeaveGuild
{
    required Ident		guild_id = 1;
    required string		guild_name = 2;
}


//操作成员 EGMI_REQ_OPR_GUILD                        	= 306; // 申请成员操作 EGMI_ACK_OPR_GUILD                        	= 307; // 成员操作结果
message ReqAckOprGuildMember
{
	enum EGGuildMemberOprType
	{
		EGAT_DOWN = 0;
		EGAT_UP = 1;
		EGAT_KICK = 2;
		
		EGAT_APPOINT 		= 3;//任命
		EGAT_FIRE 			= 4;//撤职
		EGAT_DEMISE 		= 5;//禅让
		EGAT_ACCEPTAPPLY 	= 6;//收人
		EGAT_DENYAPPLY 		= 7;//拒收
		EGAT_KICKOUT 		= 8;//开除
	}
	required Ident						guild_id = 1;
    required Ident						member_id = 2;//被操作的ID
    required EGGuildMemberOprType		type = 3;
}

//EGMI_REQ_OPR_GUILDINFO						= 310; // 申请公会操作   EGMI_ACK_OPR_GUILDINFO						= 311; // 公会操作结果
message ReqAckOprGuild
{
	enum EGGuildOprType
	{		
		EGAT_APPLYDISMISS	= 1;//申请解散军团
		EGAT_STOPDISMISS	= 2;//中止解散军团
		EGAT_SETRECRUIT		= 3;//设置招募
		EGAT_PUBLISHRECRUIT	= 4;//发布招募
		EGAT_EDITAD			= 5;//编辑公告
		EGAT_LEVELUP		= 6;//军团升级
	}
	required Ident						guild_id = 1;
    required Ident						player_id = 2;//
    required EGGuildOprType				type = 3;
	
	required string						Recruit_data = 4;//招募信息
	required string						Ad_data 	= 5;//公告信息
}

message ReqAckDonateGuildItem
{
    required Ident		guild_id = 1;
    required Ident		target_id = 2;
    repeated ItemStruct item_list = 3;
}

//EGMI_REQ_GUILDECTYPEINFO					= 312; // 申请公会副本
message ReqGuildEctypeInfo
{	
	required Ident		selfid				= 1;//角色ID
	required Ident		guild_id			= 2;//工会副本	
}

message GuildEctypeInfo
{	
	required Ident		guild_id				= 1;//角色ID
	required int64		server_id				= 2;//所在服务ID
	required int64		Ectype_id				= 3;//副本ID
	required int64		Ectype_Group			= 4;//副本层	
}

//EGMI_ACK_GUILDECTYPEINFO					= 313; // 工会副本的信息
message AckGuildEctypeInfo
{	
	required Ident		selfid				= 1;//角色ID
	required GuildEctypeInfo		xectypeinfo		= 2;//工会副本的信息
}

//EGMI_SET_GUILDECTYPEINFO					= 314; // 设置工会副本的信息
message SetGuildEctypeInfo
{	
	required Ident		selfid				= 1;//角色ID
	required GuildEctypeInfo		xectypeinfo		= 2;//工会副本的信息
}

//EGMI_ReqEnterGuildEctype					= 315; // 
message ReqEnterGuildEctype
{	
	required Ident		selfid				= 1;//角色ID
}
////////////////////////////////////////////////////////////////////////////////////////////////////

message ChatInfo
{
	enum EChatType
	{
		ECHATTYPE_NORMAL = 0;//普通
		ECHATTYPE_PRIVATE = 1;//私聊
		ECHATTYPE_GUILD = 2;//公会
		ECHATTYPE_WORLD = 3;//世界
	}
	
	required EChatType  chat_type 			= 1;//01普通2世界
	required bytes 		chat_info 			= 2;
	required int64 		chat_time 			= 3;//
	optional bytes 		addtional_info 		= 4;//附件
	
	required Ident		send_id				= 5;//发送者的ID
	required bytes 		send_name 			= 6;//发送者的名字
	optional int32 		send_level 			= 7;//发送者的等级

	repeated Ident   	recvier_id  		= 8;//接收者列表
	optional bytes		guid_name   		= 9;//公会名
}

message ReqAckCreateChatGroup
{	
	required bytes      name				= 1;//名字
	required Ident		selfid				= 2;//角色ID
	optional Ident		xChatGroupid		= 3;//聊天组的ID
	optional int32		chatType			= 4;//聊天组的聊天类型
}

message ReqAckjoinChatGroup
{	
	required Ident		selfid				= 1;//角色ID
	optional Ident		xChatGroupid		= 2;//聊天组的ID
	optional int64		result				= 3;//结果 0失败， 1成功
	optional int32		chatType			= 4;//聊天组的聊天类型
}

message ReqAckQuitChatGroup
{	
	required Ident		selfid				= 1;//角色ID
	optional Ident		xChatGroupid		= 2;//聊天组的ID
	optional int64		result				= 3;//结果 0失败， 1成功
}

message ReqSubscriptionChatGroup
{	
	required Ident		selfid				= 1;//角色ID
	repeated Ident		xChatGroupid		= 2;//订阅聊天组消息
}

message ReqCancelSubscriptionChatGroup
{	
	required Ident		selfid				= 1;//角色ID
	repeated Ident		xChatGroupid		= 2;//订阅聊天组消息
}

//EGEC_REQ_INTENSIFYLEVEL_TO_EQUIP			= 500;		 // 装备强化
message ReqIntensifylevelToEquip
{	
	required Ident		selfid				= 1;//角色ID
	required Ident		equipid			= 2;//装备ID	
}

//EGEC_ACK_INTENSIFYLEVEL_TO_EQUIP			= 501;		 // 装备强化
message AckIntensifylevelToEquip
{	
	required Ident		selfid          = 1;//角色ID
	required Ident		equipid			= 2;//装备ID
	required int32		result          = 3;//0失败 1成功
}

//EGEC_REQ_HOLE_TO_EQUIP					= 502;		 // 装备打洞
message ReqHoleToEquip
{	
	required Ident		selfid          = 1;//角色ID
	required Ident		equipid			= 2;//装备ID
}

//EGEC_ACK_HOLE_TO_EQUIP					= 503;		 // 装备打洞
message AckHoleToEquip
{	
	required Ident		selfid          = 1;//角色ID
	required Ident		equipid			= 2;//装备ID
	required int32		result          = 3;//0失败 1成功
}

//EGEC_REQ_INLAYSTONE_TO_EQUIP				= 504;		 // 装备镶嵌
message ReqInlaystoneToEquip
{	
	required Ident		selfid          = 1;//角色ID
	required Ident		equipid			= 2;//装备ID
	required bytes		stoneid			= 3;//石头ID
	required int32		hole_index      = 4;//空位
}

//EGEC_ACK_INLAYSTONE_TO_EQUIP				= 505;		 // 装备镶嵌
message AckInlaystoneToEquip
{	
	required Ident		selfid				= 1;//角色ID
	required Ident		equipid			    = 2;//装备ID
	required int32		result				= 3;//0失败 1成功
}

//EGEC_REQ_ELEMENTLEVEL_TO_EQUIP				= 506;		 // 装备附魔
message ReqElementlevelToEquip
{	
	required Ident		selfid				= 1;//角色ID
	required Ident		equipid			    = 2;//装备ID
	required EGameElementType eElementType	= 3;//附魔元素
}

//EGEC_ACK_ELEMENTLEVEL_TO_EQUIP				= 507;		 // 装备附魔
message AckElementlevelToEquip
{	
	required Ident		selfid          = 1;//角色ID
	required Ident		equipid			= 2;//装备ID
	required int32		result          = 3;//0失败 1成功
}

//EGEC_REQ_SET_FIGHT_HERO						= 508;		 // 战斗武将
message ReqSetFightHero
{	
	required Ident		selfid          = 1;//角色ID
	required Ident		Heroid			= 2;//
	required int32		FightPos	    = 3;//
}

//EGEC_WEAR_EQUIP								= 509;		 // 装备创戴
message ReqWearEquip
{	
	required Ident		selfid          = 1;//角色ID
	required Ident		equipid			= 2;//装备ID
	required Ident		Targetid        = 3;//
	
}

//EGEC_TAKEOFF_EQUIP							= 510;		 // 装备卸载
message TakeOffEquip
{	
	required Ident		selfid				= 1;//角色ID
	required Ident		equipid			    = 2;//装备ID
	required Ident		Targetid			= 3;//
}

////////////////////////////////////////////////////////////////////////////////////////////////////


//EGEC_REQ_MINING_TITLE							= 600;		 // 挖矿
message ReqMiningTitle
{	
	required Ident		selfid			= 1;//角色ID
	required int32		x				= 2;//
	required int32		y				= 3;//
}


//EGEC_REQ_SEND_MAIL = 700; // 发送邮件
message ReqSendMail
{
    required Ident      selfid              = 1; // 角色ID
    required Ident      reciever            = 2; // 目标ID
    repeated ItemStruct item_list           = 3; // 
    repeated CurrencyStruct currency_list   = 4;
}

//EGEC_REQSWICHSERVER							= 210;		 // 申请转服
message ReqSwitchServer
{
    required Ident      selfid              = 1; // 角色ID
	required int64      self_serverid		= 2; // 本来所在的服务器
    required int64      target_serverid		= 3; // 目标ID
	required int64      gate_serverid		= 4; // 目标ID
	required int64      SceneID				= 5; // 
	required Ident      client_id			= 6; // 客户端id
	required int64      groupID				= 7; //  group
}

//EGEC_ACKSWICHSERVER							= 211;		 // 申请转服
message AckSwitchServer
{
    required Ident      selfid              = 1; // 角色ID
    required int64      self_serverid		= 2; // 目标ID
	required int64      target_serverid		= 3; // 目标ID
	required int64      gate_serverid		= 4; // 目标ID
}

///////////////组队/////////////////////////////////////////////////////////////////////////////////////
message TeamInfo
{
    required Ident					team_id 		= 1;			//队伍ID
	required Ident					captain_id 		= 2;			//队长ID
	repeated TeammemberInfo 		teammemberInfo 	= 3;			//队伍成员
}

message TeammemberInfo
{
    required Ident		player_id 		= 1;			//成员ID
	required string		name 			= 2;			//名字
	required int32		nLevel 			= 3;			//等级
	required int32		job 			= 4;			//职业
	required string		HeadIcon		= 5;			//头像
}

//EGMI_REQ_CREATE_TEAM                       		= 860; 	// 申请创建队伍
//EGMI_ACK_CREATE_TEAM							= 861; 	// 创建队伍结果
message ReqAckCreateTeam
{
    required Ident		team_id = 1;
	optional TeamInfo xTeamInfo	= 2;				//队伍详细信息	
}

//EGMI_REQ_JOIN_TEAM                         		= 862; 	// 申请加入队伍
//EGMI_ACK_JOIN_TEAM								= 863; 	// 加入队伍结果
message ReqAckJoinTeam
{
    required Ident		team_id = 1;    
	optional TeamInfo xTeamInfo	= 2;				//队伍详细信息
}

//EGMI_REQ_LEAVE_TEAM                        		= 864; 	// 申请离开队伍/
//EGMI_ACK_LEAVE_TEAM								= 865; 	// 离开队伍结果 
message ReqAckLeaveTeam
{
    required Ident		team_id = 1;
	optional TeamInfo xTeamInfo	= 2;				//队伍详细信息
}


//	EGMI_REQ_OPRMEMBER_TEAM							= 867; 	// 操作成员
//	EGMI_ACK_OPRMEMBER_TEAM							= 868; 	// 操作成员 
message ReqAckOprTeamMember
{
	enum EGTeamMemberOprType
	{
		EGAT_DOWN = 0;
		EGAT_UP = 1;
		EGAT_KICK = 2;
		
		EGAT_APPOINT 		= 3;//任命
		EGAT_FIRE 			= 4;//撤职
		EGAT_DEMISE 		= 5;//禅让
		EGAT_ACCEPTAPPLY 	= 6;//收人
		EGAT_DENYAPPLY 		= 7;//拒收
		EGAT_KICKOUT 		= 8;//开除
	}
	required Ident						team_id = 1;
    required Ident						member_id = 2;//被操作的ID
    required EGTeamMemberOprType		type = 3;
	optional TeamInfo 					xTeamInfo	= 4;				//队伍详细信息
}

//	EGMI_REQ_INVITE_TEAM							= 866; 	// 邀请加入队伍
message ReqAckInviteTeam
{	
	required Ident						team_id = 1;
    required Ident						self_id = 2;//
	required Ident						invite_target_id = 3;//
}

//	EGMI_REQ_TEAM_ENTER_ECTYPE					= 869; 	// 组队进副本
message ReqTeamEnterEctype
{	
	required Ident						team_id = 1;
    required Ident						self_id = 2;//
	optional int32						nEctypeID = 3;//
	optional int32						nGroupID = 4;//
	optional int32						nResult 	= 5;//
	optional int32						nServerID 	= 6;//
}

//	EGMI_ACK_TEAM_ENTER_ECTYPE						= 870; 	// 组队进副本
message AckTeamEnterEctype
{	
	required Ident						team_id = 1;
    required Ident						self_id = 2;//
	optional int32						nEctypeID = 3;//
	optional int32						nGroupID = 4;//
	optional int32						nResult 	= 5;//
}



///////////////大地图/////////////////////////////////////////////////////////////////////////////////////
message GridGuildBaseInfo
{
	required Ident						id = 1;				//ID
	required int32						level = 2;			//Level
	required int32						count = 3;			//人数
	required int32						resource = 4;		//资源
	required bytes						icon = 5;			//Icon
}
	
//	EGMI_REQ_MAP_GRID_INFO
message ReqBigMapGridInfo
{	
	repeated bytes						map_title_id = 1;
}

message BigMapGridBaseInfo
{
	required bytes						id = 1;				//GridID
	required GridGuildBaseInfo			guild_info = 2;			//所属占领公会
	
	//war state
	
	//kingwar
	required int32						kingwar_time 	= 10;			//开始时间
	required Ident						kingwarrer 		= 11;			//发动者
	
	//hurting
	required int32						hurting_time 	= 20;			//狩猎开始时间
	required Ident						hurter 			= 21;			//狩猎者
}

message BigMapLeaveMsg
{
	required Ident						owner = 1;//留言者
	required bytes						owner_name = 2;//留言者
	required bytes						msg_data = 3;//留言内容
	required int32						msg_time = 4;//留言时间
	required int32						owner_level = 5;//留言时level
}
	
message BigMapWarHistory
{
	required GridGuildBaseInfo			red_info = 1;				//红方	
	required GridGuildBaseInfo			blue_info = 2;				//蓝方	
	
	required Ident						winner_id = 10;	//winner
	required int32						war_time = 11;	//war时间
}
	
message BigMapGridDetailInfo
{
	required BigMapGridBaseInfo			grid_base_info 	= 1;
	
	repeated GridGuildBaseInfo			stay_guid_list 	= 2;	//
	repeated BigMapLeaveMsg				leave_msg 		= 3;	//此地图留言(<=10)
	repeated BigMapWarHistory			war_history 	= 4;	//此地图历史战争信息(<=10)
}

//	EGMI_ACK_MAP_GRID_INFO
message AckBigMapGridInfo
{
	repeated BigMapGridDetailInfo						map_data = 1;
}

//	EGMI_REQ_BIG_MAP_GRID
message ReqBigMapInfo
{
}

//	EGMI_ACK_BIG_MAP_GRID
message AckBigMapInfo
{
	repeated BigMapGridBaseInfo			grid_base_info = 1;	
}

//	EGMI_REQ_HOLD_MAP_GRID
message ReqHoldMapGrid
{
	required bytes						map_title_id = 1;
	required Ident						guild_id = 2;
}
//	EGMI_ACK_HOLD_MAP_GRID
message AckHoldMapGrid
{
}

//	EGMI_REQ_LEAVE_MSG_MAP_GRID
message ReqLeaveMapMsg
{
	required bytes						map_title_id = 1;
	required BigMapLeaveMsg				leave_msg = 2;
}
//	EGMI_ACK_LEAVE_MSG_MAP_GRID
message AckLeaveMapMsg
{
}

//	EGMI_REQ_GET_MAP_GRID_AWARD
message ReqGetMapAward
{
	required bytes						map_title_id = 1;
}
//	EGMI_ACK_GET_MAP_GRID_AWARD
message AckGetMapAward
{
}

//	EGMI_REQ_MAP_GRID_HUNTING
message ReqMapHunting
{
	required bytes						map_title_id = 1;
}
//	EGMI_ACK_MAP_GRID_HUNTING
message AckMapHunting
{
}

//	EGMI_REQ_MAP_GRID_KING_WAR
message ReqMapKingWar
{
	required bytes						map_title_id = 1;
}
//	EGMI_ACK_MAP_GRID_KING_WAR
message AckMapKingWar
{
}

////////////////////////////////////////////////////////////////////////////////////////////////////
message PVPRoomInfo
{
	required int32 nCellStatus				= 1;	// 状态
	required Ident RoomID					= 2;	// 房间ID
	required int32 nPVPMode					= 3;	// 匹配模式
	required int32 nPVPGrade				= 4;	// 房间所在的阶段
	required int32 MaxPalyer				= 5;			
	repeated Ident xRedPlayer				= 6;
	repeated Ident xBluePlayer				= 7;
	optional int64      serverid			= 8; // 房间副本所在的serverid	
	optional int64      SceneID				= 9; // 房间副本所在的场景id	
	optional int64      groupID				= 10; // 房间副本所在的层
}

//EGMI_REQ_PVPAPPLYMACTCH						= 1100; 	// 申请匹配pvp
message ReqPVPApplyMatch
{	
	enum EApplyType
	{
		EApplyType_Single				=0; // 个人匹配
		EApplyType_Team					=1; // 队伍匹配
	};
	
    required Ident	self_id 				= 1;//
	required int32	nPVPMode				= 2;	// 匹配模式
	optional int64 	score					= 3;	// 分数
	required int32	ApplyType 				= 4;	// 匹配方式，队伍申请还是个人申请
	optional Ident	team_id 				= 5;	// 队伍ID 
}

//EGMI_ACK_PVPAPPLYMACTCH						= 1101; 	// 返回匹配pvp
message AckPVPApplyMatch
{	
    required Ident						self_id = 1;//
	optional PVPRoomInfo				xRoomInfo = 2;
	required int32	ApplyType 				= 3;	// 匹配方式，队伍申请还是个人申请
	required int32	nResult 					= 4;	// 匹配的结果
}

//EGMI_REQ_CREATEPVPECTYPE					= 1102; 	// 申请pvp副本
message ReqCreatePVPEctype
{	
    required Ident						self_id = 1;//
	required PVPRoomInfo				xRoomInfo = 2;
}

//EGMI_ACK_CREATEPVPECTYPE					= 1103; 	// 返回pvp副本的信息，并拉人
message AckCreatePVPEctype
{	
    required Ident	self_id 				= 1;//
	required PVPRoomInfo	xRoomInfo 		= 2;
	required int32	ApplyType 				= 3;	// 匹配方式，队伍申请还是个人申请
}

//////////////////SHARE-TOOL//////////////////////////////////////////////////////////////////////////////////
message ShareObjectUserData
{
	required Ident		user_id 	= 1;
	required string		user_id 	= 2;
	required int32		guild_honor 	= 3;
}

//EGMI_REQ_SEARCH_TO_SHARE 					= 30000;
message ReqSearchToShare
{	
    required Ident	self_id 				= 1;
	required float	startX = 2;
	required float	startY = 3;
	required float	endX = 4;
	required float	endY = 5;
}

//EGMI_ACK_SEARCH_TO_SHARE 					= 30001;
message AckSearchToShare
{
    required Ident	self_id 				= 1;
	required float	startX = 2;
	required float	startY = 3;
	required float	endX = 4;
	required float	endY = 5;

	repeated ShareObjectUserData user_list = 6;
}

//EGMI_REQ_SHARE_TO_ATART 					= 30002;
message ReqSearchToShare
{	
    required Ident	self_id 				= 1;
	required float	startX = 2;
	required float	startY = 3;
	required float	endX = 4;
	required float	endY = 5;
    required Ident	shareid = 6;
}

//EGMI_ACK_SHARE_TO_ATART 					= 30003;
message AckStartToShare
{
    required Ident	self_id 				= 1;
	required float	startX = 2;
	required float	startY = 3;
	required float	endX = 4;
	required float	endY = 5;
    required Ident	shareid = 6;
}

////////////////////////////////////////////////////////////////////////////////////////////////////